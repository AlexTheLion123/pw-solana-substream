// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.3

import { Writer, Reader } from "as-proto/assembly";
import { BetCondition } from "./BetCondition";

export class BetData {
  static encode(message: BetData, writer: Writer): void {
    writer.uint32(8);
    writer.uint64(message.amount);

    writer.uint32(16);
    writer.uint64(message.minOdds);

    writer.uint32(24);
    writer.uint32(message.freeBetId);

    writer.uint32(32);
    writer.bool(message.isLiveBet);

    writer.uint32(40);
    writer.bool(message.isSolFree);

    const selections = message.selections;
    for (let i: i32 = 0; i < selections.length; ++i) {
      writer.uint32(50);
      writer.fork();
      BetCondition.encode(selections[i], writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): BetData {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new BetData();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.amount = reader.uint64();
          break;

        case 2:
          message.minOdds = reader.uint64();
          break;

        case 3:
          message.freeBetId = reader.uint32();
          break;

        case 4:
          message.isLiveBet = reader.bool();
          break;

        case 5:
          message.isSolFree = reader.bool();
          break;

        case 6:
          message.selections.push(BetCondition.decode(reader, reader.uint32()));
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  amount: u64;
  minOdds: u64;
  freeBetId: u32;
  isLiveBet: bool;
  isSolFree: bool;
  selections: Array<BetCondition>;

  constructor(
    amount: u64 = 0,
    minOdds: u64 = 0,
    freeBetId: u32 = 0,
    isLiveBet: bool = false,
    isSolFree: bool = false,
    selections: Array<BetCondition> = []
  ) {
    this.amount = amount;
    this.minOdds = minOdds;
    this.freeBetId = freeBetId;
    this.isLiveBet = isLiveBet;
    this.isSolFree = isSolFree;
    this.selections = selections;
  }
}
