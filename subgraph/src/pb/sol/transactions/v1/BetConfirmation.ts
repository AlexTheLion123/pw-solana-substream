// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.3

import { Writer, Reader } from "as-proto/assembly";
import { BetStatus } from "./BetStatus";

export class BetConfirmation {
  static encode(message: BetConfirmation, writer: Writer): void {
    writer.uint32(8);
    writer.int32(message.status);

    writer.uint32(16);
    writer.uint32(message.betId);
  }

  static decode(reader: Reader, length: i32): BetConfirmation {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new BetConfirmation();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.status = reader.int32();
          break;

        case 2:
          message.betId = reader.uint32();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  status: BetStatus;
  betId: u32;

  constructor(status: BetStatus = 0, betId: u32 = 0) {
    this.status = status;
    this.betId = betId;
  }
}
