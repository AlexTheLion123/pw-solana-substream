// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.3

import { Writer, Reader } from "as-proto/assembly";

export class BetCondition {
  static encode(message: BetCondition, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.condition);

    writer.uint32(16);
    writer.uint32(message.outcome);
  }

  static decode(reader: Reader, length: i32): BetCondition {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new BetCondition();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.condition = reader.string();
          break;

        case 2:
          message.outcome = reader.uint32();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  condition: string;
  outcome: u32;

  constructor(condition: string = "", outcome: u32 = 0) {
    this.condition = condition;
    this.outcome = outcome;
  }
}
