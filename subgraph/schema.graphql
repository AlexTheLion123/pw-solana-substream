type Bet @entity {
  id: ID!                 # PublicKey of the bet account as a base58-encoded string
  account: String!        # PublicKey of the bet account as a base58-encoded string
  bettor: String!         # PublicKey of the bettor as a base58-encoded string
  # placedAt: BigInt!       # Use a custom scalar for BigInt
  minOdds: BigDecimal!        # odds requested, Use a custom scalar for BigInt
  amount: BigDecimal!         # Use a custom scalar for BigInt
  status: BetStatus!      # Enum type for BetStatus
  isLive: Boolean!        # Boolean for live status
  isSOLfree: Boolean!     # Boolean for SOL-free status
  # selections: [Selection!]! # Array of Selection objects
  betId: Int!           # Optional field for bet ID
  freeBetId: Int!          # Optional field for free bet ID
  result: Result!         # Result Enum
  settledOdds: BigDecimal!    # odds settled at, Use a custom scalar for BigInt
  # placed: Record!         # Record of txHash and timestamp for record keeping
  # confirmed: Record!      # Record of txHash and timestamp for record keeping
  # claimed: Record!        # Record of txHash and timestamp for record keeping
}

type Record @entity{
  id: ID!
  timestamp: BigInt!
  txHash: String!
}

enum BetStatus {
  PENDING
  ACTIVE
  FAILED
  CLAIMED
  CANCELED
}

type Selection @entity {
  id: ID!             
  conditionId: String!
  outcomeId: String!  
}

enum Result {
  PENDING
  WIN
  LOST
  REFUND
}
